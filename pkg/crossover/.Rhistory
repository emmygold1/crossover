library(crossover)
data(anderson)
View(anderson)
?sample
16 %/% 5
16 %% 5
v.rep = rep(s*p %/% v, v) + c(rep(1, s*p %% v), rep(0, v-(s*p %% v))
)
s <-4
p <-5
v.rep = rep(s*p %/% v, v) + c(rep(1, s*p %% v), rep(0, v-(s*p %% v)))
v <- 3
v.rep = rep(s*p %/% v, v) + c(rep(1, s*p %% v), rep(0, v-(s*p %% v)))
rep(0,0)
v - (s * p%%v)
v.rep = rep((s*p) %/% v, v) + c(rep(1, (s*p) %% v), rep(0, v-((s*p) %% v))
)
v.rep
sum(v.rep)
v <- 4
v.rep = rep((s*p) %/% v, v) + c(rep(1, (s*p) %% v), rep(0, v-((s*p) %% v)))
v.rep
startDesign <- sample(rep(1:v, v.rep))
startDesign
if (missing(v.rep)) {
v.rep = rep((s*p) %/% v, v) + c(rep(1, (s*p) %% v), rep(0, v-((s*p) %% v)))
} else if (sum(v.rep)!=s*p) { # TODO Feature: Allow NA or sum(v.rep)<s*p
stop("The sum of argument v.rep must equal s times p.")
}
# random start design (respecting v.rep)
design <- matrix(sample(rep(1:v, v.rep)), p, s)
rcDesign <- createRowColumnDesign(design)
source('~/git/misc/crossover/pkg/crossover/R/search.R')
source('~/git/misc/crossover/pkg/crossover/R/search.R')
searchCrossOverDesign(4,4,4)
createRowColumnDesign <- function(X, v=length(unique(as.character(X)))) {
X <- matrix(as.numeric(as.factor(D)), dim(D)[1])
rcDesign <- X + v*rbind(0, X[-dim(X)[1],])
}
createRowColumnDesign(searchCrossOverDesign(4,4,4))
prrint(createRowColumnDesign(searchCrossOverDesign(4,4,4)))
print(createRowColumnDesign(searchCrossOverDesign(4,4,4)))
X <- createRowColumnDesign(searchCrossOverDesign(4,4,4))
X <- searchCrossOverDesign(4,4,4)
print(createRowColumnDesign(X))
X
X <- matrix(as.numeric(as.factor(D)), dim(D)[1])
X
X <- matrix(as.numeric(as.factor(X)), dim(X)[1])
X
X <- searchCrossOverDesign(4,4,4)
CX
X
createRowColumnDesign(X)
print(createRowColumnDesign(X))
v*rbind(0, X[-dim(X)[1],])
X
v*rbind(0, X[-dim(X)[1],])
X+v*rbind(0, X[-dim(X)[1],])
source('~/git/misc/crossover/pkg/crossover/R/search.R')
print(createRowColumnDesign(X))
X
1:10 %*% t(1:10)
A <- diag(r) - (1/s)* NP %*% t(NP) - (1/p)* NS %*% t(NS) + (1/(p*s))* r %*% t(r)
