\documentclass[a4paper, 10pt]{article}
\usepackage{natbib}
\bibliographystyle{plainnat}
\usepackage[T1]{fontenc}
\usepackage{url}
 \usepackage[utf8]{inputenc}
\usepackage{graphicx}
%\usepackage{tikz}
%\usetikzlibrary{decorations,arrows,shapes}
\usepackage[margin=0.9in]{geometry}
%\usepackage[left=3cm,right=3cm,top=2cm,bottom=2cm]{geometry}
\usepackage{hyperref}
\usepackage{listings}
\usepackage{xspace}
\usepackage{tabularx}
\usepackage{makeidx}\makeindex
\usepackage{algorithmic} 
\usepackage{algorithm}
\usepackage{amsmath,amsthm,amsfonts,amssymb}
\setlength{\parindent}{0mm}
\setlength{\parskip}{1mm}
\newcommand{\commentout}[1]{}
\renewcommand{\theequation}{\thesection.\arabic{\equation}}
\numberwithin{equation}{section}

\theoremstyle{definition}
\newtheorem{Def}{Definition}[section]
\newtheorem{Rem}[Def]{Remark}
\newtheorem{RemDef}[Def]{Remark und Definition}
\newtheorem{DefRem}[Def]{Definition und Remark}
\newtheorem{Example}[Def]{Example}
\theoremstyle{plain}
\newtheorem{Theorem}[Def]{Theorem}
\newtheorem{DefTheorem}[Def]{Definition and Theorem}
\newtheorem{Corollary}[Def]{Corollary}
\newtheorem{Lemma}[Def]{Lemma}

\newcommand{\C}{\ensuremath{\mathbb{C}}\xspace}
\newcommand{\R}{\ensuremath{\mathbb{R}}\xspace}
\newcommand{\Q}{\ensuremath{\mathbb{Q}}\xspace}
\newcommand{\Z}{\ensuremath{\mathbb{Z}}\xspace}
\newcommand{\NN}{\ensuremath{\mathbb{N}_0}\xspace}
\newcommand{\N}{\ensuremath{\mathbb{N}}\xspace}
\newcommand{\sF}{\ensuremath{\mathcal{F}}\xspace}
\newcommand{\sN}{\ensuremath{\mathcal{N}}\xspace}
\newcommand{\Pot}{\ensuremath{\mathfrak{Pot}}\xspace}
\newcommand{\kronecker}{\raisebox{1pt}{\ensuremath{\:\otimes\:}}}

\DeclareMathOperator{\range}{range}

\newcommand{\skp}[1]{\left\langle#1\right\rangle}

\renewcommand{\epsilon}{\varepsilon}
\renewcommand{\phi}{\varphi}
\newcommand{\id}{\text{id}}

\newenvironment{Proof}{\par\noindent\upshape\textit{Proof. }\nopagebreak}{\qed\par}

\usepackage{setspace}
\onehalfspacing

\begin{document}

%\VignetteEngine{knitr}
%\VignetteIndexEntry{Crossover - Comparing results}

<<include=FALSE, message=FALSE>>=
if (exists("opts_chunk")) {
  opts_chunk$set(concordance=TRUE)
  opts_chunk$set(tidy.opts=list(keep.blank.line=FALSE, width.cutoff=95))
  #opts_chunk$set(size="footnotesize")
  #opts_chunk$set(size="tiny")
  opts_chunk$set(cache=TRUE)
  opts_chunk$set(autodep=TRUE)
  opts_chunk$set(size="scriptsize") 
}
library(Crossover, quietly=TRUE)
options(width=128)
options(digits=4)
startGUI <- function(...) {invisible(NULL)}
#options(prompt="> ", continue="+ ")
library(MASS)
library(multcomp)
library(ggplot2)
library(Matrix)

s <- 6; p <- 4; v <- 2

design1 <- t(rbind(c(1,1,2,2),
                   c(2,2,1,1),
                   c(1,1,2,2),
                   c(2,2,1,1),
                   c(1,2,2,1),
                   c(2,1,1,2)))
design2 <- t(rbind(c(1,1,2,1),
                   c(2,2,1,2),
                   c(1,1,2,1),
                   c(2,2,1,2),
                   c(1,2,2,1),
                   c(2,1,1,2)))
design3 <- t(rbind(c(1,1,2,2),
                   c(2,2,1,1),
                   c(1,1,2,2),
                   c(2,2,1,1),
                   c(1,1,2,2),
                   c(2,2,1,1)))
design4 <- t(rbind(c(1,1,2,2), # TODO Also correct in other version
                   c(2,2,1,1),
                   c(1,1,2,2),
                   c(2,2,1,1),
                   c(1,2,2,1),
                   c(2,1,1,2))) # Why is there no design 4 in the book?
design5 <- t(rbind(c(1,2,2,2),
                   c(2,1,1,1),
                   c(1,2,2,2),
                   c(2,1,1,1),
                   c(1,1,2,2),
                   c(2,2,1,1)))
design6 <- t(rbind(c(1,2,1,2),
                   c(2,1,2,1),
                   c(1,1,2,1),
                   c(2,2,1,2),
                   c(1,2,1,2),
                   c(2,1,2,1)))
design7 <- t(rbind(c(1,1,2,1),
                   c(2,2,1,2),
                   c(1,1,1,2),
                   c(2,2,2,1),
                   c(1,2,1,1),
                   c(2,1,2,2)))
design8 <- t(rbind(c(1,2,2,2),
                   c(2,1,1,1),
                   c(1,1,2,2),
                   c(2,2,1,1),
                   c(1,2,1,2),
                   c(2,1,2,1)))

designB1 <- rbind(c(2, 2, 1, 1, 2, 1),
      c(2, 1, 2, 1, 2, 1),
      c(1, 1, 2, 2, 1, 2),
      c(1, 2, 1, 2, 1, 2))

designB2 <- rbind(c(1, 1, 2, 2, 2, 1),
      c(1, 2, 2, 1, 1, 2),
      c(2, 2, 1, 1, 2, 1),
      c(1, 1, 2, 2, 1, 2))

designB3 <- rbind(c(1, 1, 1, 2, 2, 2),
      c(1, 1, 1, 2, 2, 2),
      c(2, 2, 2, 1, 1, 1),
      c(2, 2, 2, 1, 1, 1))

designB4 <- rbind(c(1, 2, 2, 2, 1, 1),
                  c(2, 2, 1, 1, 1, 2),
                  c(2, 1, 1, 1, 2, 2),
                  c(1, 1, 2, 2, 2, 1))

designB5 <- rbind(c(2, 1, 1, 2, 1, 2),
      c(2, 2, 1, 2, 1, 1),
      c(1, 2, 2, 1, 2, 1),
      c(1, 2, 2, 1, 2, 1))

designB6 <- rbind(c(1, 2, 2, 1, 1, 2),
      c(2, 1, 1, 2, 2, 1),
      c(1, 2, 2, 1, 1, 2),
      c(2, 1, 1, 2, 2, 1))

designB7 <- rbind(c(1, 1, 2, 2, 2, 1),
      c(2, 2, 1, 1, 1, 2),
      c(1, 2, 1, 2, 2, 1),
      c(1, 1, 2, 2, 1, 2))

designB8 <- rbind(c(1, 2, 1, 1, 2, 2),
      c(2, 1, 1, 2, 2, 1),
      c(2, 2, 2, 1, 1, 1),
      c(2, 1, 2, 2, 1, 1))

newBookDesigns <- list(designB1, designB2, designB3, designB4, 
                       designB5, designB6, designB7, designB8)

for (model in 1:8) {
  for (i in 1:8) {
    design <- newBookDesigns[[i]]
    Ar <- Crossover:::infMatrix_R(Crossover:::rcd(design,v,model), v=v, model=model)
    H <- Crossover:::linkMatrix(model=model,v=v)
    A <- t(H)%*%Ar%*%H
    M <- ginv(A)[1:2,1:2]
    cat("Model ",model,":",round((M[1,1]+M[2,2]-M[1,2]-M[2,1])/4,3)," (",Crossover:::models[model],")\n")
  }
}

@

\subsection*{Interaction}


<<echo=TRUE, eval=TRUE, cache=TRUE>>=

x <- c(-1,-1,1,1)
y <- c(-1,1,-1,1)
z <- c(-1,-1,-1,-1,1,1,1,1)
x <- c(-1,-1,1,1,-1,-1,1,1)
y <- c(-1,1,-1,1,-1,1,-1,1)
r <- rnorm(8)
M <- model.matrix(lm(r~x*y*z))
M



x <- as.factor(c(-1,-1,1,1))
y <- as.factor(c(-1,1,-1,1))
z <- as.factor(c(-1,-1,-1,-1,1,1,1,1))
x <- as.factor(c(-1,-1,1,1,-1,-1,1,1))
y <- as.factor(c(-1,1,-1,1,-1,1,-1,1))
r <- rnorm(8)
M <- model.matrix(lm(r~x*y*z))
M

treatment <- as.factor(c(-1, 1,-1, 1, 1,-1, 1,-1))
carryover <- as.factor(c( 0, 0,-1, 1,-1, 1, 1,-1))
#y <- as.factor(c(-1,1,-1,1,-1,1,-1,1))
r <- rnorm(8)
M <- model.matrix(lm(r~treatment*carryover))
M


@

What you want to estimate is the following contrast:

<<>>=


x <- c(-1,-1,1,1)
y <- c(-1,1,-1,1)
r <- rnorm(4)
model.matrix(lm(r~x*y))




@


Link matrix:

<<>>=

design7

Csub <- contrMat(n=rep(1, v), type="Tukey")
class(Csub) <- "matrix" #TODO Package matrix can be improved here (IMO)!
C1 <- Crossover:::appendZeroColumns(Csub, model=7, v)
C2 <- C1[,1:6, drop=FALSE]
C3 <- C1[,1:5, drop=FALSE]

# Row-Column-Design: (cf. John et al. 2004, Table II and page 2649f.)
rcDesign <- Crossover:::rcd(design7, v=v, model=1)
rcDesign
# Design Matrix of Row-Column Design:
Xr <- Crossover:::rcdMatrix(rcDesign, v, model=1)
Xr

H <- Crossover:::linkMatrix(model="Full set of interactions", v)
H

# This is again H from above:
H1 <- rbind(c(1, 0, 0, 0, 0, 0, 0, 0),
            c(0, 1, 0, 0, 0, 0, 0, 0),
            c(1, 0, 1, 0, 1, 0, 0, 0), 
            c(0, 1, 1, 0, 0, 0, 1, 0), 
            c(1, 0, 0, 1, 0, 1, 0, 0), 
            c(0, 1, 0, 1, 0, 0, 0, 1))

H2 <- rbind(c(1, 0, 0, 0, 0, 0),
            c(0, 1, 0, 0, 0, 0),
            c(1, 0, 1, 0, 1, 0), 
            c(0, 1, 1, 0, 0, 0), 
            c(1, 0, 0, 1, 0, 0), 
            c(0, 1, 0, 1, 0, 1))

H3 <- rbind(c(1, 0, 0, 0,  0), # This setting defines the 1st parameter.
            c(0, 1, 0, 0,  0), # This setting defines the 2nd parameter.
            c(1, 0, 1, 0, -1), # This and the next setting define
            c(0, 1, 1, 0,  1), # the 3rd and 5th parameter.
            c(1, 0, 0, 1,  1), #
            c(0, 1, 0, 1, -1)) # This is not the full interaction model. 

rankMatrix(H1)[1]
rankMatrix(H2)[1]
rankMatrix(H3)[1]

# Design Matrix of Cross-Over Design:
X1 <- Xr %*% H1
X1

X2 <- Xr %*% H2
X2

X3 <- Xr %*% H3
X3


Ar <- t(Xr) %*% (diag(s*p)-Crossover:::getPZ(s,p)) %*% Xr
A1 <- t(H1) %*% Ar %*% H1
C1 %*% ginv(A1) %*% t(C1)

A2 <- t(H2) %*% Ar %*% H2
C2 %*% ginv(A2) %*% t(C2)

A3 <- t(H3) %*% Ar %*% H3
C3 %*% ginv(A3) %*% t(C3)


# Design Matrix of Cross-Over Design:
X <- Xr %*% H2
X




fX <- cbind(Xr %*% H, Crossover:::getZ(s,p))
A2 <- t(fX) %*% fX
ginv(A2)[1:6,1:6]

fX <- cbind(Xr %*% H2, Crossover:::getZ(s,p))
A2 <- t(fX) %*% fX
ginv(A2)[1:6,1:6]




@


We have\footnote{\url{http://en.wikipedia.org/wiki/Block_matrix_pseudoinverse}}:

\[
\left(\left[\begin{matrix}X^T\\Z^T\end{matrix}\right]\left[\begin{matrix}X & Z\end{matrix}\right]\right)^{-1}
=\left[\begin{matrix}X^TX&X^TZ\\Z^TX&Z^TZ\end{matrix}\right]^{-1}%\\
=\left[\begin{matrix}(X^TP^\perp_ZX)^{-1}&-(X^TP^\perp_ZX)^{-1}X^TZ(Z^TZ)^{-1}\\
-(Z^TP^\perp_XZ)^{-1}Z^TX(X^TX)^{-1}&(Z^TP^\perp_XZ)^{-1}\end{matrix}\right].
\]



<<>>=

rnorm(2)


@

\end{document}
